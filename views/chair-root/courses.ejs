<div class="bg-light task-view" id="courses-view">
    <div class="side-panel">
        <div class="panel-header mx-4">
            <div class="d-flex justify-content-between">
                <h4>Courses</h4>
                <div>
                    <a type="button"><i class="fas fa-sort-alpha-up-alt"></i></a>
                    <a type="button"><i class="fas fa-search ms-2"></i></a>
                </div>
            </div>
            <div class="input-group">
                <input type="text" class="form-control" placeholder="New Program Course" aria-describedby="add-course">
                <a type="button" class="input-group-text" id="add-course">
                    <i class="fas fa-plus text-primary"></i>
                </a>
            </div>
        </div>
        <hr>
        <div class="mx-3 panel-body">
            <% if (data.courses.length> 0) { %>
                <ul class="list-group panel-menu">
                    <% for (const course of data.courses) { %>
                        <button type="button" class="list-group-item list-group-item-action menu-item"
                            title="<%= course.title %>" id="<%= course.id %>">
                            <p class="text-truncate m-0">
                                <%= course.title %>
                            </p>
                        </button>
                        <% } %>
                </ul>
                <% } else { %>
                    <p class="text-muted text-center">No Courses</p>
                    <% } %>
        </div>
    </div>
    <div class="bg-white px-5 pt-4 pb-5">
        <% if (data.courses.length> 0) { %>
            <div class="dropdown">
                <a class="btn btn-primary btn-lg btn-rounded btn-top dropdown-toggle" data-mdb-toggle="dropdown" title="Add semester" id="add-semester">
                    add semester
                </a>
                <ul class="dropdown-menu" aria-labelledby="add-semester">
                    <li><a class="dropdown-item" role="button" id="new-year">New Academic Year</a></li>
                    <li><a class="dropdown-item" role="button" id="new-summer">Summer Term</a></li>
                    <li><hr class="dropdown-divider" /></li>
                    <li><a class="dropdown-item text-danger" role="button">Cancel</a></li>
                </ul>
            </div>
            <h3 style="color: #8673b4;" id="curriculum-title">
                <%= data.courses[0]["title"] %> Curriculum
            </h3>
            <label for="curriculum-title">Total No. of Units: 0</label>
            <hr>
            <% } %>
    </div>
</div>
<% let subjects = JSON.stringify(data.subjects) %>
<script src="/lib/responsive-table.js"></script>
<script>
    const newCourse = (title) => $.post(
        "http://localhost:3000/api/curriculum/", {name: title},
        (data, status) => {}
    ).fail((data) => console.log(data));

    const getCurriculum = (courseID) => new Promise((resolve, reject) => {
        $.get(
            "http://localhost:3000/api/curriculum/" + courseID,
            (data, status) => { resolve(data) }, "json"
        ).fail((data) => console.log(data))
    });

    const addSemester = (courseID, semData) => $.post(
        "http://localhost:3000/api/curriculum/" + courseID, semData,
        (data, status) => console.log(data)
    ).fail((data) => console.log(data));
    
    const totalTermsPerYear = <%- JSON.stringify(data.totalTerms || 0) %>;
    const semesterTables = [];
    const subjects = <%- JSON.stringify(data.subjects || []) %>;
    const courses = $(".panel-menu>button.menu-item");
    let latestTerm, latestSem, latestYear;
    let openCourse;
    if (courses.length > 0) {
        let courseTitle = $("#curriculum-title");
        openCourse = courses.get(0);
        $(openCourse).addClass("active");
        initCourseCurriculum(getCurriculum(openCourse.id));

        const semTableContent = 
            `<thead><th class="data-title" style="width: 300px;" title="ASC">COURSE CODE</th>` +
            `<th class="data-title" title="ASC">COURSE TITLE</th>` +
            `<th class="data-title" style="width: 100px;" title="ASC">UNITS</th>` +
            `<td class="edit-title">Action</td></thead>` +
            `<tbody></tbody>` +
            `<tfoot><tr class="add-data">` +
                `<td><label class="add-td-input optional" id="code" title="COURSE CODE"></label></td>` +
                `<td><div class="dropdown">` +
                    `<button class="btn btn-secondary dropdown-toggle add-td-input unique" type="button" id="title"` +
                    `data-mdb-toggle="dropdown" aria-expanded="false" title="COURSE TITLE">COURSE TITLE</button>` +
                    `<ul class="dropdown-menu" aria-labelledby="title"><li><a class="dropdown-item" role="button">` +
                    `${subjects.join('</a></li><li><a class="dropdown-item" role="button">')}</a></li></ul>` +
                `</div></td>` +
                `<td><label class="add-td-input optional" id="units" title="UNITS"></label></td>` +
            `</tr></tfoot>`;

        $("#new-year").click(() => {
            try {
                addSemester(openCourse.id, { forNewYear: true, latestYear: latestYear });
                latestYear++;
            } catch (error) {
                return console.log(error);
            }
            $("li:has(#new-summer)").show();
            let view = $("#courses-view>div:last-child");
            for (let i = 1; i <= totalTermsPerYear; i++) {
                const newTable = `<div class="semester-header"><h6>${toOrdinal(latestYear)} Year, ${toOrdinal(i)} Semester</h6>` +
                    `<div><a class="btn btn-primary btn-floating" data-cts-toggle="table" data-cts-target="#${latestYear}-${i}-term">` +
                    `<i class="fas fa-edit fa-lg me-2"></i></a><a class="btn btn-success btn-floating" data-cts-dismiss="table"` +
                    `data-cts-target="#${latestYear}-${i}-term"><i class="fas fa-check-double fa-lg me-2"></i></a></div></div>` +
                    `<table class="table table-bordered table-sm mb-5 editable" id="${latestYear}-${i}-term">${semTableContent}</table>`;
                view.append(newTable);
            }
            view.get(0).scrollTo(0, view.scrollHeight);

            for (let i = 1; i <= totalTermsPerYear; i++) {
                const newSemTable = new ResponsiveTable(`#${latestYear}-${i}-term`);
                newSemTable.initData();
                semesterTables.push(newSemTable);
            }
        });
        $("#new-summer").click(() => {
            try {
                addSemester(openCourse.id, { forNewYear: false, latesYear: latestYear });
            } catch (error) {
                return console.log(error);
            }
            $("li:has(#new-summer)").hide();
            let view = $("#courses-view>div:last-child").append(
                `<div class="semester-header"><h6>${toOrdinal(latestYear)} Year, Summer</h6>` +
                `<div><a class="btn btn-primary btn-floating" data-cts-toggle="table"` +
                    `data-cts-target="#${latestYear}-s-term"><i class="fas fa-edit fa-lg me-2"></i></a>` +
                    `<a class="btn btn-success btn-floating" data-cts-dismiss="table"` +
                    `data-cts-target="#${latestYear}-s-term"><i class="fas fa-check-double fa-lg me-2"></i></a>` +
                `</div></div>` +
                `<table class="table table-bordered table-sm mb-4 editable" id="${latestYear}-s-term">${semTableContent}</table>`
            ).get(0);
            view.scrollTo(0, view.scrollHeight);
            const newSemTableSummer = new ResponsiveTable(`#${latestYear}-s-term`);
            newSemTableSummer.initData();
            semesterTables.push(newSemTableSummer);
        });

        $("button.menu-item").click((event) => {
            let activeItem = event.currentTarget;
            if (!$(activeItem).hasClass("active")) {
                let index = $(activeItem).index();
                openCourse = courses[index];
                $(".side-panel").hide();
                $("button.menu-item.active").removeClass("active");
                $(activeItem).addClass("active");
                $(courseTitle).text(activeItem.title + " Curriculum");
            }
        });
    }

    async function initCourseCurriculum(data) {
        data = await data;
        const curriculum = data.curriculum;
        const totalTerms = curriculum.length;
        
        $("label[for='curriculum-title']").text("Total No. of Units: " + data.totalUnits);

        const semesterContent = 
            `<thead><th class="data-title" style="width: 300px;" title="ASC">COURSE CODE</th>` +
            `<th class="data-title" title="ASC">COURSE TITLE</th>` +
            `<th class="data-title" style="width: 100px;" title="ASC">UNITS</th>` +
            `<td class="edit-title">Action</td></thead>` +
            `<tbody></tbody>` +
            `<tfoot><tr class="add-data">` +
                `<td><label class="add-td-input optional" id="code" title="COURSE CODE"></label></td>` +
                `<td><div class="dropdown">` +
                    `<button class="btn btn-secondary dropdown-toggle add-td-input unique" type="button" id="title"` +
                    `data-mdb-toggle="dropdown" aria-expanded="false" title="COURSE TITLE">COURSE TITLE</button>` +
                    `<ul class="dropdown-menu" aria-labelledby="title"><li><a class="dropdown-item" role="button"></ul>` +
                `</div></td>` +
                `<td><label class="add-td-input optional" id="units" title="UNITS"></label></td>` +
            `</tr></tfoot>`;
        let view = $("#courses-view>div:last-child");
        for (let i = 0; i < curriculum.length; i++) {
            const term = curriculum[i];
            const newTable = `<div class="semester-header"><h6>${toOrdinal(term.year)} Year, ` +
                `${(term.term == "s") ? "Summer" : toOrdinal(term.term) + " Semester"}</h6><div>` +
                `<a class="btn btn-primary btn-floating" data-cts-toggle="table" data-cts-target="#${term.year}-${term.term}-term">` +
                `<i class="fas fa-edit fa-lg me-2"></i></a><a class="btn btn-success btn-floating" data-cts-dismiss="table"` +
                `data-cts-target="#${term.year}-${term.term}-term"><i class="fas fa-check-double fa-lg me-2"></i></a></div></div>` +
                `<table class="table table-bordered table-sm mb-5 editable" id="${term.year}-${term.term}-term">${semesterContent}</table>`;
            view.append(newTable);
            const newSemTable = new ResponsiveTable(`#${term.year}-${term.term}-term`);
            newSemTable.initData(term.subjects);
            semesterTables.push(newSemTable);
        }

        latestYear = curriculum[totalTerms-1].year;
        latestTerm = curriculum[totalTerms-1].term;
        if (latestSem == "s") {
            $("li:has('#new-summer')").hide();
        }
    }

    function toOrdinal(number) {
        if (number == 1) {
            return number + "<sup>st</sup>";
        } else if (number == 2) {
            return number + "<sup>nd</sup>";
        } else if (number == 3) {
            return number + "<sup>rd</sup>";
        } else if (number > 3) {
            return number + "<sup>th</sup>";
        } else {
            return number;
        }
    }
</script>