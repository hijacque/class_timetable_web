<% const {prevFaculty, nextFaculty, current} = schedule %>
<% const {id, name} = current %>
<% if (current.sched_status == 'open') { %>
<div class="modal fade" id="schedule-class" data-mdb-backdrop="static" data-mdb-keyboard="false"
    tabindex="-1" aria-labelledby="schedule-class-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="schedule-class-label">Assign New Class</h5>
                <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <label for="class-subject">Subject:</label><span id="class-subject"></span><br>
                <label for="class-block">Block:</label><span id="class-block"></span><br>
                <label for="class-faculty">Faculty:</label>
                <span id="class-faculty"><%= name %></span><br>
                <label for="class-hours">Assigned hours:</label>
                <span id="class-hours"></span>
                <hr>
                <p><small>Class Schedule</small></p>
                <div class="input-group mb-2">
                    <div class="dropdown">
                        <a class="text-primary dropdown-toggle input-group-text rounded-0 rounded-start" type="button"
                            data-mdb-toggle="dropdown" aria-expanded="false" id="class-day">Pick Day</a>
                        <ul class="dropdown-menu" aria-labelledby="class-day">
                            <li><a class="dropdown-item" role="button" data-cts-enum="1">MONDAY</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="2">TUESDAY</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="3">WEDNESDAY</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="4">THURSDAY</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="5">FRIDAY</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="6">SATURDAY</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="7">SUNDAY</a></li>
                            <li><hr class="dropdown-divider m-0"></li>
                            <li><a class="dropdown-item text-danger" role="button">Cancel</a></li>
                        </ul>
                    </div>
                    <span class="input-group-text"><i class="fas fa-at"></i></span>
                    <input type="time" id="class-start" class="form-control">
                    <span class="input-group-text"> - </span>
                    <input type="time" id="class-end" class="form-control">
                </div>
                <div class="input-group mb-3">
                    <div class="dropdown">
                        <a class="text-primary dropdown-toggle input-group-text rounded-0 rounded-start" type="button"
                            data-mdb-toggle="dropdown" aria-expanded="false" id="class-mode">Pick Mode</a>
                        <ul class="dropdown-menu" aria-labelledby="class-mode">
                            <li><a class="dropdown-item" role="button" data-cts-enum="1">F2F</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="2">Online</a></li>
                            <li><a class="dropdown-item" role="button" data-cts-enum="3">Blended</a></li>
                            <li><hr class="dropdown-divider m-0"></li>
                            <li><a class="dropdown-item text-danger" role="button">Cancel</a></li>
                        </ul>
                    </div>
                    <input type="text" id="class-room" class="form-control" placeholder="Room no." disabled>
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-between">
                <div>
                    <button type="button" class="btn btn-danger" id="delete-schedule" data-mdb-dismiss="modal">delete</button>
                </div>
                <div>
                    <button type="button" class="btn btn-secondary me-2" data-mdb-dismiss="modal">cancel</button>
                    <button type="button" class="btn btn-warning me-2" id="reset-schedule">reset</button>
                    <button type="button" class="btn btn-primary" id="change-schedule" data-mdb-dismiss="modal">change</button>
                    <button type="button" class="btn btn-primary" id="add-schedule" data-mdb-dismiss="modal">assign</button>
                </div>
            </div>
        </div>
    </div>
</div>
<% } %>
<div class="main-view">
    <div class="w-100">
        <nav aria-label="Schedule Navigation for Faculty">
            <ul class="pagination" id="schedule-nav">
                <% if (prevFaculty) { %>
                    <li class="page-item">
                        <a href="/schedule/faculty?term=<%= term.code %>&id=<%= prevFaculty.faculty_id %>"
                            class="page-link me-2" type="button" ><i class="fas fa-chevron-left"></i></a>
                        <p class="prev page-label"><%= prevFaculty.name %></p>
                    </li>
                <% } else { %>
                    <li class="page-item disabled">
                        <a class="page-link me-2" type="button"><i class="fas fa-chevron-left"></i></a>
                        <p class="prev page-label"></p>
                    </li>
                <% } %>

                <% if (nextFaculty) { %>
                    <li class="justify-content-end page-item" id="<%= nextFaculty.id %>">
                        <p class="next page-label"><%= nextFaculty.name %></p>
                        <a href="/schedule/faculty?term=<%= term.code %>&id=<%= nextFaculty.faculty_id %>" 
                            class="page-link ms-2" type="button"><i class="fas fa-chevron-right"></i></a>
                    </li>
                <% } else { %>
                    <li class="justify-content-end page-item disabled">
                        <p class="next page-label"></p>
                        <a class="page-link ms-2" type="button"><i class="fas fa-chevron-right"></i></a>
                    </li>
                <% } %>
            </ul>
        </nav>
        <% const {faculty_id, status, sched_status, pref_status, new_pref_subjs, old_pref_subjs, teach_load} = current %>
        <div class="about">
            <div class="d-flex">
                <h4 class="page-title">
                    <%= name %>
                </h4>
                <form method="post" target="export_schedule" action="/schedule/download/<%= term.code %>/faculty"
                    onsubmit="window.open('_blank','export_schedule');">
                    <input type="hidden" name="id" value="<%= faculty_id %>">
                    <input type="hidden" name="name" value="<%= name %>">
                    <button type="submit" class="ms-4 btn btn-secondary btn-floating" title="Export schedules">
                        <i class="fas fa-cloud-arrow-down fa-lg"></i>
                    </button>
                </form>
                <% if (sched_status == 'open') { %>
                <form action="/schedule/save/<%= term.code %>/<%= current.id %>" method="post">
                    <input type="hidden" name="facultyID" value="<%= faculty_id %>">
                    <button type="submit" class="ms-2 btn btn-primary btn-floating" id="lock-schedules" title="Save schedules">
                        <i class="fas fa-lock fa-lg me-2"></i>
                    </button>
                </form>
                <% } else if (sched_status == 'saved') { %>
                    <form action="/schedule/unsave/<%= term.code %>/<%= current.id %>" method="post">
                        <input type="hidden" name="facultyID" value="<%= faculty_id %>">
                        <button type="submit" class="ms-2 btn btn-danger btn-floating" id="lock-schedules" title="Unlock schedules">
                            <i class="fas fa-unlock fa-lg me-2"></i>
                        </button>
                    </form>
                <% } %>
            </div>
            <h6 class="text-muted"><%= faculty_id %></h6>
            <p>
                <b>Employment Status:</b> <%= status %><br>
                <b>Faculty Load:</b> <%= teach_load %><br>
                <b>Schedule Status:</b> <%= sched_status %><br>
                <% if (pref_status == 'submitted' && new_pref_subjs) { %>
                <small>* preferred schedules are in white *</small><br>
                <b>Currently Preferred Subjects:</b> <%= new_pref_subjs.join(", ") %>
                <% } else { %>
                <b>Preference status:</b> <%= pref_status %>
                <% } %>
                <% if (old_pref_subjs.length > 0) { %>
                    <br><b>Previously Preferred Subjects:</b> <%= old_pref_subjs.join(", ") %>
                <% } %>
            </p>
        </div>
        <div class="scheduler">
            <div></div>
            <div class="days">
                <div>MON</div>
                <div>TUE</div>
                <div>WED</div>
                <div>THU</div>
                <div>FRI</div>
                <div>SAT</div>
                <div>SUN</div>
            </div>
            <div class="times">
                <div>7 AM</div>
                <div>8 AM</div>
                <div>9 AM</div>
                <div>10 AM</div>
                <div>11 AM</div>
                <div>12 PM</div>
                <div>1 PM</div>
                <div>2 PM</div>
                <div>3 PM</div>
                <div>4 PM</div>
                <div>5 PM</div>
                <div>6 PM</div>
                <div>7 PM</div>
                <div>8 PM</div>
                <div>9 PM</div>
                <div>10 PM</div>
            </div>
            <div class="schedules">
                <div class="sched-grid">
                    <% let occupied = 0 %>
                    <% for (const {day, start, end} of current.pref_scheds) { %>
                        <% for (let i = start; i < end; i++) { %>
                            <div class="bg-white" style="grid-column: <%= day %> / span 1; grid-row: <%= i %>;"></div>
                        <% } %>
                        <% occupied += end - start %>
                    <% } %>
                    <% for (let i = 0; i < 224 - occupied; i++) { %>
                        <div></div>
                    <% } %>
                </div>
                <div class="sched-body">
                    <% for (const schedule of current.classes) { %>
                        <div class="sched-block" data-mdb-toggle="tooltip" data-mdb-html="true"
                            <% if (schedule.room) { %>
                            title="<b><%= schedule.subject %></b><br><small><%= schedule.year %>-<%= schedule.block_no %> <%= schedule.course %><br><i><%= schedule.mode %> @ <%= schedule.room %></i></small>"
                            <% } else { %>
                            title="<b><%= schedule.subject %></b><br><small><%= schedule.year %>-<%= schedule.block_no %> <%= schedule.course %><br><i><%= schedule.mode %></i></small>"
                            <% } %>
                            style="grid-column: <%= schedule.day %> / span 1; grid-row: <%= schedule.start_time %> / <%= schedule.end_time %>;"
                            aria-valuemin="<%= schedule.start %>" aria-valuemax="<%= schedule.end %>" 
                            aria-valuenow="<%= schedule.day %>" aria-current="<%= schedule.duration %>">
                            <h6 class="text-break subject" itemid="<%= schedule.subj_id %>">
                                <%= schedule.subject %>
                            </h6>
                            <p class="text-truncate"><small>
                                <span class="block" itemid="<%= schedule.block_id %>">
                                    <%= schedule.year %>-<%= schedule.block_no %> <%= schedule.course %>
                                </span><br>
                                <% if (schedule.room) { %>
                                    <i>
                                        <span class="mode"><%= schedule.mode %></span> @ 
                                        <span class="room" itemid="<%= schedule.room_id %>"><%= schedule.room %></span>
                                    </i>
                                <% } else { %>
                                    <i class="mode"><%= schedule.mode %></i>
                                <% } %>
                            </small></p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
    <% if (current.sched_status == 'open') { %>
        <div class="side-panel">
            <div class="panel-header mx-4 mb-3">
                <h5>Unassigned Classes</h5>
            </div>
            <div class="panel-body pb-5">
                <a type="button" class="collapse-btn" data-mdb-toggle="collapse" data-mdb-target="#department-classes"
                    aria-expanded="false">
                    <i class="fas fa-caret-down me-2"></i><text>Departmental Classes</text>
                </a>
                <% if (deptClasses.length> 0) { %>
                    <div class="collapse show" id="department-classes">
                        <div>
                            <h6 class="block-title">
                                <small><%= deptClasses[0].course %></small><br>
                                Year <%= deptClasses[0].year %> - Block <%= deptClasses[0].block_no %>
                            </h6>
                            <ul class="list-group panel-menu" id="<%= deptClasses[0].block_id %>"
                                title="<%= deptClasses[0].course %> <%= deptClasses[0].year %> - <%= deptClasses[0].block_no %>">
                            <% for (let i=0; i < deptClasses.length; i++) { %>
                                <% if ((i > 0 && deptClasses[i].year != deptClasses[i-1].year) || (i > 0 && deptClasses[i].block_no != deptClasses[i-1].block_no)) { %>
                                    </ul>
                                    <hr>
                                    <h6 class="block-title">
                                        <small><%= deptClasses[i].course %></small><br>
                                        Year <%= deptClasses[i].year %> - Block <%= deptClasses[i].block_no %>
                                    </h6>
                                    <ul class="list-group panel-menu" id="<%= deptClasses[i].block_id %>"
                                        title="<%= deptClasses[i].course %> <%= deptClasses[i].year %> - <%= deptClasses[i].block_no %>">
                                <% } %>
                                    <button type="button" title="<%= deptClasses[i].subject %>" 
                                        itemid="<%= deptClasses[i].subj_id %>"
                                        class="list-group-item list-group-item-action menu-item"
                                        aria-valuemax="<%= deptClasses[i].req_hours || 0 %>"
                                        aria-valuenow="<%= deptClasses[i].assigned_time || 0 %>">
                                        <p class="text-truncate m-0">
                                            <%= deptClasses[i].subject %><br>
                                            <% if (deptClasses[i].assigned_time > 0) { %>
                                                <small class="text-muted">Assigned hours: <%= deptClasses[i].assigned_time %> / <%= deptClasses[i].req_hours %></small>
                                            <% } %>
                                        </p>
                                    </button>
                            <% } %>
                            </ul>
                        </div>
                    </div>
                <% } else { %>
                    <div class="collapse" id="department-classes">
                        <p>No more classes to assign</p>
                    </div>
                <% } %>
                <a type="button" class="collapse-btn" data-mdb-toggle="collapse" data-mdb-target="#other-classes" 
                    aria-expanded="false"><i class="fas fa-caret-down me-2"></i><text>Other Classes</text>
                </a>
                <% if (otherClasses.length> 0) { %>
                    <div class="collapse" id="other-classes">
                        <div>
                            <h6 class="block-title"><small><%= otherClasses[0].course %></small><br>
                                Year <%= otherClasses[0].year %> - Block <%= otherClasses[0].block_no %>
                            </h6>
                            <ul class="list-group panel-menu">
                            <% for (let i=0; i < otherClasses.length; i++) { %>
                                <% if (i> 0 && otherClasses[i].year != otherClasses[i-1].year) { %>
                                    </ul>
                                    <hr>
                                    <h6 class="block-title"><small><%= otherClasses[i].course %></small><br>
                                        Year <%= otherClasses[i].year %> - Block <%= otherClasses[i].block_no %>
                                    </h6>
                                    <ul class="list-group panel-menu" id="<%= otherClasses[i].block_id %>"
                                        title="<%= otherClasses[i].course %> <%= otherClasses[i].year %> - <%= otherClasses[i].block_no %>">
                                <% } %>
                                <button type="button" class="list-group-item list-group-item-action menu-item"
                                    itemid="<%= otherClasses[i].id %>"
                                    title="<%= otherClasses[i].subject %>" id="<%= otherClasses[i].id %>"
                                    aria-valuemax="<%= otherClasses[i].req_hours || 0 %>"
                                    aria-valuenow="<%= otherClasses[i].assigned_time || 0 %>">
                                    <p class="text-truncate m-0">
                                        <%= otherClasses[i].subject %><br>
                                        <% if (otherClasses[i].assigned_time > 0) { %>
                                            <small class="text-muted">Assigned hours: <%= otherClasses[i].assigned_time %> / <%= deptClasses[i].req_hours %></small>
                                        <% } %>
                                        <small></small>
                                    </p>
                                </button>
                            <% } %>
                            </ul>
                        </div>
                    </div>
                <% } else { %>
                    <div class="collapse" id="other-classes">
                        <p>No more classes to assign</p>
                    </div>
                <% } %>
            </div>
        </div>
        <% } %>
</div>

<script src="/lib/display-dropdown.js"></script>
<script>
    let currentSched = { faculty: "<%= id %>" };
    displayDropMenu($("#class-day"), "Pick Day");
    displayDropMenu($("#class-mode"), "Pick Mode");

    const addClass = (schedule) => new Promise((resolve, reject) => {
        $.post("/api/schedules/<%= term.id %>",
            { schedule: schedule }, () => location.reload()
        ).fail((error) => reject(error.responseJSON));
    });

    const manageClass = (action, oldSchedule, newSchedule = {}) => new Promise((resolve, reject) => {
        $.post(
            "/api/schedule/<%= term.id %>",
            { oldSched: oldSchedule, newSched: newSchedule, action: action }, 
            () => resolve(location.reload())
        ).fail((error) => reject(error.responseJSON));
    });
    
    $(".menu-item").click((event) => {
        const newClass = event.currentTarget;
        console.log(newClass);
        $("#schedule-class-label").text("Assign New Class");
        $("#class-subject").text(newClass.title).attr("aria-valuenow", newClass.getAttribute("itemid"));
        const assignedHours = parseFloat(newClass.ariaValueNow);
        const reqHours = parseInt(newClass.ariaValueMax);
        $("#class-hours")
            .text(`${assignedHours} / ${reqHours}`)
            .attr("aria-valuemax", reqHours - assignedHours)
            .attr("aria-valuemin", assignedHours);
        
        const block = $(newClass).closest(".panel-menu");
        $("#class-block").text(block.attr("title")).attr("aria-valuenow", block.attr("id"));

        $("#add-schedule").show();
        $("#change-schedule, #delete-schedule, #reset-schedule").hide();
        scheduleForm.show();
    });

    $(".sched-block").click((event) => {
        const prevClass = event.currentTarget;
        $("#schedule-class-label").text("Change Class Schedule");
        const [subj, block, mode, room] = $(prevClass).find(".subject, .block, .mode, .room");
        console.log(prevClass.ariaValueMin, prevClass.ariaValueMax, prevClass.ariaValueNow);
        $("#class-subject").text(subj.textContent).attr("aria-valuenow", subj.getAttribute("itemid"));
        $("#class-block").text(block.textContent).attr("aria-valuenow", block.getAttribute("itemid"));
        $("#class-start").val(prevClass.ariaValueMin);
        $("#class-end").val(prevClass.ariaValueMax);
        $("#class-hours").text(prevClass.ariaCurrent).attr("aria-valuemax", prevClass.ariaCurrent);

        currentSched.block = block.getAttribute("itemid");
        currentSched.subject = subj.getAttribute("itemid");
        currentSched.day = prevClass.ariaValueNow;
        currentSched.start_time = prevClass.ariaValueMin;
        currentSched.end_time = prevClass.ariaValueMax;
        currentSched.start = roundMinutes(prevClass.ariaValueMin);
        currentSched.end = roundMinutes(prevClass.ariaValueMax);
        currentSched.mode = mode.textContent;
        $(`ul[aria-labelledby='class-day']>li:nth-child(${prevClass.ariaValueNow})>a.dropdown-item`).trigger("click");
        $(`ul[aria-labelledby='class-mode']>li>a.dropdown-item:contains(${mode.textContent})`).trigger("click");

        if (room) {
            $("#class-room").val(room.textContent);
            currentSched.room_name = room.textContent;
            currentSched.room_id = room.getAttribute("itemid");
        } else {
            delete currentSched.room_name;
            delete currentSched.room_id;
        }
        
        console.log(currentSched);
        $("#add-schedule").hide();
        $("#change-schedule, #delete-schedule, #reset-schedule").show();
        scheduleForm.show();
    });

    $("[aria-labelledby='class-day'] > li > a.dropdown-item").click((event) => {
        const dayIndex = event.currentTarget.getAttribute("data-cts-enum");
        if (!dayIndex) return $("#class-day").attr("aria-valuenow", null);

        $("#class-day").attr("aria-valuenow", dayIndex);
        $("#class-start").focus();
    });

    $("[aria-labelledby='class-mode'] > li > a.dropdown-item").click((event) => {
        const modeIndex = event.currentTarget.getAttribute("data-cts-enum");
        if (!modeIndex) {
            $("#class-room").val(null).prop("disabled", true);
            return $("#class-room").attr("aria-valuenow", null);
        }

        $("#class-mode").attr("aria-valuenow", modeIndex);
        if (modeIndex == 1) {
            $("#class-room").prop("disabled", false).focus();
        } else {
            $("#class-room").val(null).prop("disabled", true);
        }
    });

    $("#confirm-alert").click((event) => {
        event.currentTarget.removeAttribute("data-mdb-target")
        event.currentTarget.removeAttribute("data-mdb-toggle");
    });

    $("#reset-schedule").click(async (event) => {
        console.log(currentSched);
        $("#class-end").val(currentSched.end_time);
        $("#class-start").text(currentSched.start_time);
        $(`ul[aria-labelledby='class-day']>li:nth-child(${currentSched.day})>a.dropdown-item`).trigger("click");
        $(`ul[aria-labelledby='class-mode']>li>a.dropdown-item:contains(${currentSched.mode})`).trigger("click");
        if (currentSched.room_id) {
            $("#class-room").val(currentSched.room_name);
        }
    });

    $("#add-schedule").click(async (event) => {
        const validTime = validateScheduleInput();
        if (!validTime) return;

        try {
            await addClass({
                faculty: "<%= id %>",
                subject: $("#class-subject").attr("aria-valuenow"),
                mode: $("#class-mode").attr("aria-valuenow") || 1,
                room: $("#class-room").val().toLowerCase(),
                block: $("#class-block").attr("aria-valuenow"),
                day: $("#class-day").attr("aria-valuenow"),
                start: validTime.startTime,
                end: validTime.endTime,
                partial: parseFloat($("#class-hours").attr("aria-valuemin")) > 0 ? 1 : 0,
            });
        } catch (eResponse) {
            console.log(eResponse);
            if (eResponse) {
                if (eResponse.redirect) {
                    location.replace(eResponse.redirect);
                }
                if (eResponse.message) {
                    $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
                    alertModal.show(...Object.values(eResponse.message));
                }
            } else {
                $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
                alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
            }
        }
    });

    $("#change-schedule").click(async (event) => {
        const validTime = validateScheduleInput();
        if (!validTime) return;
        
        try {
            await manageClass("change", currentSched,{
                faculty: "<%= id %>",
                subject: $("#class-subject").attr("aria-valuenow"),
                mode: $("#class-mode").attr("aria-valuenow") || 1,
                room: $("#class-room").val().toLowerCase(),
                block: $("#class-block").attr("aria-valuenow"),
                day: $("#class-day").attr("aria-valuenow"),
                start: validTime.startTime,
                end: validTime.endTime
            });
        } catch (eResponse) {
            if (eResponse) {
                if (eResponse.redirect) {
                    location.replace(eResponse.redirect);
                }
                if (eResponse.message) {
                    console.log(eResponse.message);
                    $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
                    alertModal.show(...Object.values(eResponse.message));
                }
            } else {
                $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
                alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
            }
        }
    });

    $("#delete-schedule").click(async (event) => {
        try {
            await manageClass("delete", currentSched);
        } catch (eResponse) {
            if (eResponse) {
                if (eResponse.redirect) {
                    location.replace(eResponse.redirect);
                }
                if (eResponse.message) {
                    $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
                    alertModal.show(...Object.values(eResponse.message));
                }
            } else {
                $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
                alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
            }
        }
    });

    function validateScheduleInput() {
        const day = $("#class-day");
        const start = $("#class-start");
        const end = $("#class-end");
        const hours = $("#class-hours");
        const reqMinutes = parseFloat(hours.attr("aria-valuemax")) * 60;
        if (day.text() == "Pick Day" || !start.val() || !end.val()) {
            $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
            alertModal.show(2, "Missing schedule input", "Fill in week day, start time and end time.");
            return false;
        } else if (start.val() > end.val()) {
            $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
            alertModal.show(2, "Invalid time input", "End time is earlier than start time");
            return false;
        }
        const startTime = roundMinutes(start.val(), 30);
        if (startTime < 7 * 60) {
            $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
            alertModal.show(2, "Start time is too early", "Class must start on or later than 7AM");
            return false;
        }
        
        const endTime = roundMinutes(end.val(), 30);
        if (endTime > 22 * 60) {
            $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
            alertModal.show(2, "End time is too late", "Class must end on or before than 10PM");
            return false;
        } else if (endTime - startTime > reqMinutes) {
            $("#confirm-alert").attr("data-mdb-target", "#schedule-class").attr("data-mdb-toggle", "modal");
            alertModal.show(2, "Invalid time input", "Assigned time exceeds required hours.");
            return false;
        }

        return {startTime: startTime, endTime: endTime};
    }

    function roundMinutes(time, nearestMinutes = 1) {
        let [hours, mins] = time.split(":");
        let toMins = parseInt(hours) * 60 + parseInt(mins);
        const rounded = Math.round(toMins / nearestMinutes) * nearestMinutes;
        const finalMins = rounded % 60;
        const finalHours = (rounded - finalMins);
        return finalHours + finalMins;
    }
</script>