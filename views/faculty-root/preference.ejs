<% const {current, subjOptions, forms, type} = data %>
<div class="bg-light task-view" id="preference-view">
    <div class="side-panel px-3">
        <h4>Pending<br>Preference Forms</h4>
        <div class="panel-body">
            <hr>
            <% if (current && forms) { %>
            <ul class="list-group panel-menu">
                <% for (const {pref_id, year, ordinal_term, term} of forms) { %>
                    <a type="button" class="list-group-item list-group-item-action menu-item"
                        href="/<%= type %>/preference?term=<%= year %><%= term %>"
                        title="<%= year %><%= term %>" id="<%= pref_id %>" >
                        <p class="text-truncate m-0">
                            <%= year %>-<%= year + 1 %>, <%- ordinal_term %> Semester
                        </p>
                    </a>
                <% } %>
            </ul>
            <% } else { %>
                No forms
            <% } %>
        </div>
    </div>
    <div class="bg-white pt-4">
        <% if (current && forms) { %>
        <div>
            <a class="btn btn-primary btn-lg btn-rounded btn-top mt-2" title="Submit preference form" 
                id="submit-pref" type="button">
                <i class="fas fa-check fa-lg me-2"></i>submit
            </a>
        </div>
        <% const {pref_id, year, ordinal_term, term} = current %>
            <h3 class="text-center mb-4">
                Faculty Schedule Preference Form<br>
                <small class="text-muted">
                    <%= year %>-<%= year + 1 %>, <%- ordinal_term %> Semester
                </small>
            </h3>
            <hr>
            <div class="px-5">
                <label class="table-title fw-bold">Your Subject Expertises:</label>
                <div class="mb-4 mt-2 w-75 stack-list" id="subjects-list">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle btn-rounded mt-1" type="button" id="pref-subj"
                            data-mdb-toggle="dropdown" aria-expanded="false">Add Field</button>
                        <ul class="dropdown-menu" aria-labelledby="pref-subj">
                            <% for (const subject of subjOptions) { %>
                            <li><a class="dropdown-item" role="button"><%= subject %></a></li>
                            <% } %>
                        </ul>
                    </div>
                </div>
                <label class="table-title fw-bold">Your Preferred Schedule:</label>
                <table class="table table-bordered table-sm fw-bold mt-2 mb-4 w-50 editable" id="pref-schedule">
                    <thead class="text-center">
                        <tr>
                            <th style="width: 160px;">Day</th>
                            <th>Time-in</th>
                            <th>Time-out</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Monday</td>
                            <td><input type="time" class="form-control start-time"></td>
                            <td><input type="time" class="form-control end-time"></td>
                        </tr>
                        <tr>
                            <td>Tuesday</td>
                            <td><input type="time" class="form-control start-time"></td>
                            <td><input type="time" class="form-control end-time"></td>
                        </tr>
                        <tr>
                            <td>Wednesday</td>
                            <td><input type="time" class="form-control start-time"></td>
                            <td><input type="time" class="form-control end-time"></td>
                        </tr>
                        <tr>
                            <td>Thursday</td>
                            <td><input type="time" class="form-control start-time"></td>
                            <td><input type="time" class="form-control end-time"></td>
                        </tr>
                        <tr>
                            <td>Friday</td>
                            <td><input type="time" class="form-control start-time"></td>
                            <td><input type="time" class="form-control end-time"></td>
                        </tr>
                        <tr>
                            <td>Saturday</td>
                            <td><input type="time" class="form-control start-time"></td>
                            <td><input type="time" class="form-control end-time"></td>
                        </tr>
                        <tr>
                            <td>Sunday</td>
                            <td><input type="time" class="form-control start-time"></td>
                            <td><input type="time" class="form-control end-time"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        <% } else if (forms) { %>
            <h2 class="text-center">No forms selected yet..</h2>
        <% } else { %>
            <h2 class="text-center">No Open Preference Forms</h2>
        <% } %>
    </div>
</div>
<% if (current) { %>
<script>
    const expertises = [];
    const submitPreference = (schedules = []) => new Promise((resolve, reject) => $.post(
        "/api/preferences/<%= current.pref_id %>",
        {subjects: expertises, schedules: schedules}, 
        (data) => resolve(data), "json",
    ).fail((data) => reject(data)));

    function roundMinutes(time, nearestMinutes = 1) {
        let [hours, mins] = time.split(":");
        let toMins = parseInt(hours) * 60 + parseInt(mins);
        const rounded = Math.round(toMins / nearestMinutes) * nearestMinutes;
        const finalMins = rounded % 60;
        const finalHours = (rounded - finalMins);
        return finalHours + finalMins;
    }

    const subjectsList = $("div.stack-list#subjects-list");
    $(subjectsList).find(".dropdown-item").click((event) => {
        $(".pref-form").scrollTop(0);
        let itemVal = event.currentTarget.textContent;
        let newItem = $(`<button class="btn btn-outline-secondary btn-rounded stack-list-item" type="button">${itemVal}</button>`);
        let listItem = $(event.currentTarget).parent("li");
        $(newItem).click(() => {
            expertises.pop();
            $(newItem).remove();
            $(listItem).show();
        }).hover(
            () => $(newItem).addClass("btn-outline-danger").removeClass("btn-outline-secondary"),
            () => $(newItem).removeClass("btn-outline-danger").addClass("btn-outline-secondary")
        );
        $(event.currentTarget).closest(".dropdown").after(newItem);
        $(listItem).hide();
        expertises.push(itemVal);

    });

    $("#submit-pref").click(async () => {
        let prefSchedules = $("#pref-schedule>tbody>tr").get();
        for (let i = 0; i < prefSchedules.length; i++) {
            const start = $(prefSchedules[i]).find(".start-time").val();
            const end = $(prefSchedules[i]).find(".end-time").val();
            
            prefSchedules[i] = { day: i + 1 };
            if (start && end) {
                let startTime = roundMinutes(start, 30);
                if (startTime < 7 * 60) {
                    $("#confirm-alert").attr("data-mdb-target", "#add-class").attr("data-mdb-toggle", "modal");
                    alertModal.show(2, $(sched).first().text() + " start time is too early", "Class must start on or later than 7AM");
                    return console.log("Class must start on or later than 7AM");
                }
                prefSchedules[i].start = startTime;

                let endTime = roundMinutes(end, 30);
                if (endTime > 22 * 60) {
                    $("#confirm-alert").attr("data-mdb-target", "#add-class").attr("data-mdb-toggle", "modal");
                    alertModal.show(2, $(sched).first().text() + " end time is too late", "Class must end on or before than 10PM");
                    return console.log("Class must end on or before 10PM");
                }
                prefSchedules[i].end = endTime;
                console.log(startTime, endTime);
            }
        }
        
        console.log(prefSchedules);
        console.log(expertises);
        try {
            const {message} = await submitPreference(prefSchedules.filter(sched => sched.start && sched.end));
            $("#confirm-alert").click(() => location.reload());
            alertModal.show(...Object.values(message));
        } catch (eResponse) {
            if (eResponse) {
                if (eResponse.redirect) {
                    location.replace(eResponse.redirect);
                }
                if (eResponse.message) {
                    $("#confirm-alert").attr("data-mdb-target", "#add-class").attr("data-mdb-toggle", "modal");
                    alertModal.show(...Object.values(eResponse.message));
                }
            } else {
                alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
            }
        }
    });

    const currentForm = $("#<%= current.pref_id %>").addClass("active");
</script>
<% } %>