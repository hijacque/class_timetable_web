<div class="bg-light task-view" id="departments-view">
    <div class="side-panel">
        <div class="panel-header mx-4">
            <div class="d-flex justify-content-between">
                <h4>Colleges</h4>
                <div>
                    <a type="button"><i class="fas fa-sort-alpha-up-alt"></i></a>
                    <a type="button"><i class="fas fa-search ms-2"></i></a>
                </div>
            </div>
            <div class="input-group">
                <input type="text" class="form-control" placeholder="New College" aria-describedby="add-college">
                <a type="button" class="input-group-text" id="add-college">
                    <i class="fas fa-plus text-primary"></i>
                </a>
            </div>
        </div>
        <hr>
        <div class="mx-3 panel-body">
            <% if (data.colleges.length> 0) { %>
                <ul class="list-group panel-menu">
                    <% for (const college of data.colleges) { %>
                        <button type="button" class="list-group-item list-group-item-action menu-item"
                            title="<%= college.name %>" id="<%= college.id %>">
                            <p class="text-truncate m-0">
                                <%= college.name %>
                            </p>
                        </button>
                        <% } %>
                </ul>
                <% } else { %>
                    <p class="text-muted text-center">No Colleges</p>
                    <% } %>
        </div>
    </div>
    <div class="shadow-3 bg-white px-5 pt-4">
        <% if (data.colleges.length> 0) { %>
            <h2 style="color: #8673b4;" class="table-title"></h2>
            <br>
            <button class="btn btn-primary btn-rounded" data-cts-toggle="table" data-cts-target="#departments-table">
                <i class="fas fa-edit fa-lg me-2"></i>edit table</button>
            <button class="btn btn-success btn-rounded" data-cts-dismiss="table" data-cts-target="#departments-table"
                aria-hidden="true">save changes</button>
            <table class="table table-bordered table-sm fw-bold my-4" id="departments-table">
                <thead class="text-center">
                    <tr>
                        <th table-cts-column="department text" style="width: 300px;">Department</th>
                        <th table-cts-column="chairperson text" style="width: 400px;">Chairperson</th>
                        <th table-cts-column="activity text">Recent Activity</th>
                        <td table-cts-column="edit">Action</td>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                    <tr class="add-data">
                        <td><input type="text" class="form-control add-td-input unique"></td>
                        <td><label class="add-td-input optional"></label></td>
                        <td><label class="add-td-input optional"></label></td>
                    </tr>
                </tfoot>
            </table>
        <% } %>
    </div>
</div>
<script src="/lib/responsive-table.js"></script>
<script src="/lib/api/admin-departments.js"></script>
<script>
    const initChairUpdate = () => {
        $(`${departmentsTable.body}>tr`).on("row:edit", async (event) => {
            let chairColumn = $(event.currentTarget).children().get(1);
            let origItem = $(chairColumn).text();
            $(event.currentTarget).data("prevChair", origItem);
            if (origItem == "NULL") {
                return;
            }
            let deptID = departmentsTable.data[$(event.currentTarget).index()]["id"];
            let faculty = await getFaculty(deptID, ["faculty_id", "last_name", "first_name", "middle_name"]);
            if (faculty.length < 2) {
                return;
            }
            
            let dropMenu = "<ul class='dropdown-menu'>";
            for (const name of faculty) {
                let facultyName = `${name.last_name}, ${name.first_name} ${name.middle_name}`;
                dropMenu += `<li><a class="dropdown-item" role="button">${facultyName} (${name.faculty_id})</a></li>`;
            }
            dropMenu += "</ul>";
            $(chairColumn).empty().append(
                `<div class="dropdown">` +
                `<button class="btn btn-secondary dropdown-toggle td-input" type="button" ` +
                `id="chairperson" data-mdb-toggle="dropdown" aria-expanded="false" ` +
                `title="${origItem}">${origItem}</button>${dropMenu}` +
                `</div>`
            );
            departmentsTable.initMenuInputs(event.currentTarget);
        }).on("row:confirm-change", async (event) => {
            const chairColumn = $(event.currentTarget).children().get(1);
            let newChair = $(chairColumn).text();
            const deptID = departmentsTable.data[$(event.currentTarget).index()]["id"];
            let prevChair = $(event.currentTarget).data("prevChair");
            if (prevChair != "NULL" && prevChair != newChair) {
                await updateChair(deptID, $(chairColumn).text());
                $(event.currentTarget).removeData("prevChair");
            }
        });
    }

    const departmentsTable = new EditableTable("#departments-table");
    const colleges = $(".panel-menu>button.menu-item");
    if (colleges.length > 0) {
        let openCollege = colleges.get(0);
        $(openCollege).addClass("active");
        let collegeTitle = $(".table-title");

        // initialize responsive Departments table
        departmentsTable.initData(getDepartments(openCollege.id), true, initChairUpdate);
        $(collegeTitle).text("Departments in " + $(openCollege).text());
        // retrieves departments from the open college
        $("button.menu-item").click((event) => {
            let activeItem = event.currentTarget;
            if (!$(activeItem).hasClass("active")) {
                openCollege = activeItem;
                $(".side-panel").hide();
                $("button.menu-item.active").removeClass("active");
                $(activeItem).addClass("active");
                departmentsTable.initData(getDepartments(activeItem.id), true, initChairUpdate);
                $(collegeTitle).text("Departments in " + activeItem.title);
            }
            departmentsTable.saveBtn.trigger("click");
        });

        $(departmentsTable.addBtn).click(async (event) => {
            try {
                let addedData = await $(event.currentTarget).data("newRow");
                if (addedData) { addDepartment(openCollege.id, addedData); }
            } catch (error) {
                $(`${departmentsTable.body}>tr:last-child`).remove();
                departmentsTable.data.pop();
            }
            $(event.currentTarget).removeData("newRow");
        });
    }

    $("#add-college").click((event) => {
        let collegeInput = $(event.currentTarget).siblings("input").get(0);
        try {
            addCollege(collegeInput.value);
            location.reload();
        } catch (error) {
            console.log(error);
        }
    });
    
</script>