<% const {colleges, currentDept} = data %>
<div class="bg-light task-view" id="faculty-view">
    <div class="side-panel">
        <div class="d-flex mx-4 justify-content-between mb-3">
            <h4>Departments</h4>
            <div>
                <a type="button"><i class="fas fa-sort-alpha-up-alt"></i></a>
                <a type="button"><i class="fas fa-search ms-2"></i></a>
            </div>
        </div>
        <div class="panel-body">
            <% if (colleges.length > 0) { %>
                <% for (const {id, name, departments} of colleges) { %>
                    <a type="button" class="collapse-btn" title="<%= name %>" data-mdb-toggle="collapse"
                        data-mdb-target="#college-<%= id %>" aria-expanded="false"
                        aria-controls="college-<%= id %>">
                        <i class="fas fa-caret-down me-2"></i><text>
                            <%= name %>
                        </text>
                    </a>
                    <% if (departments.length> 0) { %>
                        <div class="collapse show" id="college-<%= id %>">
                            <div>
                                <ul class="list-group panel-menu">
                                    <% for (const dept of departments) { %>
                                        <a type="button" class="list-group-item list-group-item-action menu-item"
                                            <% if (dept.name != currentDept.name) { %>
                                                href="/admin/faculty/<%= dept.name.split(' ').join('_') %>"
                                            <% } %>
                                            title="<%= dept.name %>" id="<%= dept.name %>">
                                            <p class="text-truncate m-0">
                                                <%= dept.name %>
                                            </p>
                                        </a>   
                                    <% } %>
                                </ul>
                            </div>
                        </div>
                    <% } else { %>
                        <div class="collapse" id="college-<%= id %>">
                            <p>No Departments</p>
                        </div>
                    <% } %>
                <% } %>
            <% } else { %>
                <p class="text-muted text-center">No Colleges</p>
            <% } %>
        </div>
    </div>
    <div class="shadow-3 bg-white px-5 pt-4">
        <% if (colleges.length > 0 && currentDept) { %>
            <h2 style="color: #8673b4;" id="table-title">Faculty in <%= currentDept.name %> Department</h2>
            <br>
            <div>
                <a class="btn btn-primary btn-rounded btn-top" data-cts-toggle="table" data-cts-target="#faculty-table"
                    href="#add-faculty" type="button">
                    <i class="fas fa-edit fa-lg me-2"></i>edit table
                </a>
                <a class="btn btn-success btn-rounded btn-top" data-cts-dismiss="table" data-cts-target="#faculty-table"
                    aria-hidden="true" type="button">
                    <i class="fas fa-check-double fa-lg me-2"></i>save table
                </a>
            </div>
            <table class="table table-bordered table-sm my-4" id="faculty-table">
                <thead class="text-center">
                    <tr>
                        <th table-cts-column="last_name text">Surname</th>
                        <th table-cts-column="first_name text">First Name</th>
                        <th table-cts-column="middle_name text">Middle Name</th>
                        <th table-cts-column="status dropdown [full-time,part-time]" style="width: 140px;">Employment Status</th>
                        <th table-cts-column="teach_load number" style="width: 90px;">Teach<br>Load</th>
                        <th table-cts-column="is_chair checkbox" style="width: 120px;">Chairperson</th>
                        <th table-cts-column="email text">E-mail</th>
                        <th table-cts-column="consultation optional">Consultation Hours</th>
                        <td table-cts-column="edit delete">Action</td>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot id="add-faculty">
                    <tr class="add-data">
                        <td><input type="text" class="form-control add-td-input" placeholder="Dela Cruz"></td>
                        <td><input type="text" class="form-control add-td-input" placeholder="Juan"></td>
                        <td><input type="text" class="form-control add-td-input" placeholder="Antonio"></td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle add-td-input" type="button"
                                    data-mdb-toggle="dropdown" aria-expanded="false" title="Status">Status</button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" role="button">full-time</a></li>
                                    <li><a class="dropdown-item" role="button">part-time</a></li>
                                </ul>
                            </div>
                        </td>
                        <td><input type="number" class="form-control add-td-input text-center"></td>
                        <td>
                            <% if (currentDept.chair_id) { %>
                                <label class="add-td-input optional"></label>
                            <% } else { %>
                                <input type="checkbox" class="form-check-input add-td-input" />
                            <% } %>
                        </td>
                        <td><input type="email" class="form-control add-td-input unique" placeholder="jadelacruz@school.edu.ph"></td>
                        <td><label class="add-td-input optional"></label></td>
                    </tr>
                </tfoot>
            </table>
        <% } else if (colleges.length > 0) { %>
            <h4>No Departments selected yet.</h4>
        <% } else { %>
            <h4>No Colleges found...</h4>
        <% } %>
    </div>
</div>
<script src="/lib/responsive-table.js"></script>
<% if (currentDept) { %>
    <script>
        const updateFaculty = (prevData, changes) => new Promise((resolve, reject) => {
            $.post(
                "/api/update_faculty/<%= currentDept.id %>", {old: prevData, new: changes}, 
                (data) => resolve(data)
            ).fail((error) => reject(error.responseJSON))
        });
        async function confirmFacultyEdit(event) {
            const action = $(event.currentTarget).data("action");
            if (!action) {
                return console.log("Deleting from db...");
            }

            let newData, oldData;
            try {
                newData = $(event.currentTarget).data("updated-data");
                oldData = $(event.currentTarget).data("prev-data");
                console.log(oldData);
                console.log(newData);
            } catch (error) {
                $(event.currentTarget).trigger("row:edit");
                return console.log(error);
            }

            try {
                await updateFaculty(oldData, newData);
                if (newData.is_chair == 1) {
                    let index = $(event.currentTarget).index();
                    console.log(index);
                    $(`${facultyTable.body}>tr:not(tr:nth-child(${index + 1}))>td:has('i.fa-check')`).empty();
                    facultyTable.data = facultyTable.data.map((f, i) => i != index ? ({...f, is_chair: 0}) : f);
                }
            } catch (error) {
                if (error) {
                    if (error.redirect) {
                        location.replace(error.redirect);
                    }
                    if (error.message) {
                        alertModal.show(...Object.values(error.message));
                    }
                } else {
                    alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
                }
                console.log(error);
                $(event.currentTarget).trigger("row:edit");
            }
        }
        const departments = $(".panel-menu > .menu-item").get();
        const facultyTable = new EditableTable("#faculty-table");
        
        if (departments.length > 0) {
            let openDepartment = departments.find(dept => dept.title == "<%= currentDept.name %>");
            $(openDepartment).addClass("active");
            facultyTable.initData(getFaculty("<%= currentDept.id %>"), true, () => {
                $(`${facultyTable.body}>tr`).on("row:confirm-change", confirmFacultyEdit);
            });
    
            $(facultyTable.addBtn).click(async (event) => {
                let newFaculty;
                try {
                    newFaculty = await $(event.currentTarget).data("newRow");
                } catch (error) {
                    return console.log(error);
                }
                
                try {
                    const result = await addFaculty("<%= currentDept.id %>", newFaculty);
                    console.log(result);
                    if (result) {
                        alertModal.show(...Object.values(result.message));
                    }
                } catch (eResponse) {
                    console.log(eResponse);
                    if (eResponse) {
                        if (eResponse.redirect) {
                            location.replace(eResponse.redirect);
                        }
                        if (eResponse.message) {
                            alertModal.show(...Object.values(eResponse.message));
                        }
                    } else {
                        alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
                    }

                    facultyTable.data.pop();
                    $(`${facultyTable.body} > tr:last-child`).remove();
                    const [id, status, load, lname, fname, mname, email] = facultyTable.footer.find(".add-td-input").get();
                    id.value = newFaculty.faculty_id;
                    status.textContent = newFaculty.status;
                    load.value = newFaculty.teach_load;
                    lname.value = newFaculty.last_name;
                    fname.value = newFaculty.first_name;
                    mname.value = newFaculty.middle_name;
                    email.value = newFaculty.email;
                }
                $(event.currentTarget).removeData("newRow");
            });
        }
    </script>
<% } %>