<% const {buildings, currentBldg} = data %>
<div class="bg-light task-view" id="rooms-view">
    <div class="side-panel">
        <div class="panel-header mx-4">
            <div class="d-flex justify-content-between">
                <h4>Buildings</h4>
                <div>
                    <a type="button"><i class="fas fa-sort-alpha-up-alt"></i></a>
                    <a type="button"><i class="fas fa-search ms-2"></i></a>
                </div>
            </div>
            <div class="input-group">
                <input type="text" class="form-control" placeholder="New Building" aria-describedby="add-building">
                <a type="button" class="input-group-text" id="add-building">
                    <i class="fas fa-plus text-primary"></i>
                </a>
            </div>
        </div>
        <hr>
        <div class="mx-3 panel-body">
            <% if (buildings.length> 0) { %>
                <ul class="list-group panel-menu">
                    <% for (const {id, name} of buildings) { %>
                        <a type="button" class="list-group-item list-group-item-action menu-item"
                            <% if (id != currentBldg.id) { %>
                                href="/admin/rooms/<%= name.split(" ").join("_") %>"
                            <% } %>
                            title="<%= name %>">
                            <p class="text-truncate m-0"><%= name %></p>
                        </a>
                    <% } %>
                </ul>
                <% } else { %>
                    <p class="text-muted text-center">No Buildings</p>
                <% } %>
        </div>
    </div>
    <div class="shadow-3 bg-white px-5 pt-4">
        <% if (buildings.length> 0 && currentBldg) { %>
            <h2 style="color: #8673b4;" class="table-title">Rooms in <%= currentBldg.name %></h2>
            <br>
            <div>
                <a class="btn btn-primary btn-rounded btn-top" data-cts-target="#rooms-table"
                    data-cts-toggle="table" href="#add-room">
                    <i class="fas fa-edit fa-lg me-2"></i>edit table
                </a>
                <button class="btn btn-success btn-rounded btn-top" data-cts-dismiss="table" 
                    data-cts-target="#rooms-table" aria-hidden="true">
                    <i class="fas fa-check-double fa-lg me-2"></i>save table
                </button>
            </div>
            <table class="table table-bordered table-sm fw-bold my-4 w-50" id="rooms-table">
                <thead class="text-center">
                    <tr>
                        <th table-cts-column="name text">Name</th>
                        <th table-cts-column="level number" style="width: 100px;">Level</th>
                        <th table-cts-column="capacity number" style="width: 100px;">Capacity</th>
                        <td table-cts-column="edit delete">Action</td>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot id="add-room">
                    <tr class="add-data">
                        <td><input type="text" class="form-control w-100 add-td-input unique reuse"></td>
                        <td><input type="number" class="form-control w-100 add-td-input reuse"></td>
                        <td><input type="number" class="form-control w-100 add-td-input optional"></td>
                    </tr>
                </tfoot>
            </table>
        <% } else if (buildings.length > 0) { %>
            <h4 style="color: #8673b4;">No buildings chosen yet...</h4>
        <% } else { %>
            <h4 style="color: #8673b4;">No buildings found</h4>
        <% } %>
    </div>
</div>
<script src="/lib/responsive-table.js"></script>
<script>
    const buildings = $(".panel-menu > .menu-item").get();
    <% if (currentBldg) { %>
        // initialize responsive Rooms table
        const roomsTable = new EditableTable("#rooms-table");
        if (buildings.length > 0) {
            let openBuilding = buildings.find(bldg => bldg.title == "<%= currentBldg.name || buildings[0].name %>");
            $(openBuilding).addClass("active");
            roomsTable.initData(getRooms("<%= currentBldg.id || buildings[0].name %>"), true);
            
            $(roomsTable.addBtn).click(async (event) => {
                let newRoom;
                try {
                    newRoom = await $(event.currentTarget).data("newRow");
                } catch (error) {
                    return console.error(error);
                }

                try {
                    await addRoom("<%= currentBldg.id %>", newRoom);
                } catch (eResponse) {
                    if (eResponse) {
                        if (eResponse.redirect) {
                            location.replace(eResponse.redirect);
                        }
                        if (eResponse.message) {
                            alertModal.show(...Object.values(eResponse.message));
                        }
                    } else {
                        alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
                    }

                    $(`${roomsTable.body} > tr:last-child`).remove();
                    roomsTable.data.pop();
                }

                $(event.currentTarget).removeData("newRow");
            });
        }
    <% } %>
    
    $("#add-building").click(async (event) => {
        const newBldg = $(event.currentTarget).siblings("input").get(0).value;
        if (buildings.some(bldg => bldg.title == newBldg)) {
            return alertModal.show(
                2, "Duplicate building", 
                "Building with the same name already exists."
            );
        }

        try {
            await addBuilding(newBldg);
            location.replace("/admin/rooms/" + newBldg.split(" ").join("_"));
        } catch (eResponse) {
            if (eResponse) {
                if (eResponse.redirect) {
                    location.replace(eResponse.redirect);
                }
                if (eResponse.message) {
                    alertModal.show(...Object.values(eResponse.message));
                }
            } else {
                alertModal.show(0, "Server error", "Unexpected error occured, please try again later.");
            }
        }
    });
</script>